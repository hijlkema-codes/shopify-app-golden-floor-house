(()=>{var u=(e,t="generic",r=void 0,...s)=>{let a=e.querySelector("[data-errors]"),o=a.content.querySelector(`[data-error="${t}"]`);o||(o=a.content.querySelector("[data-error='generic']"));let p=o.cloneNode(!0);e.appendChild(p),e.setAttribute("aria-invalid","true"),r&&console.warn(r,...s)},m=e=>{e.querySelectorAll("[data-error]").forEach(r=>{r.remove()}),e.setAttribute("aria-invalid","false")};var b={parse_float:e=>parseFloat(e),parse_boolean:e=>["true","1","on","yes"].includes(e.toLowerCase()),to_currency:e=>new Intl.NumberFormat(void 0,{currency:"EUR",style:"currency"}).format(e),to_currency_unsigned:e=>new Intl.NumberFormat(void 0,{currency:"EUR",style:"currency",currencyDisplay:"code"}).format(e).replace("EUR","").trim(),from_cents:e=>e/100},i=(e,t)=>t.reduce((r,s)=>b[s]?b[s](r):r,e);var c=(e,t)=>{let r=document.querySelector(`[data-value-target="${e}"]`);if(r)if(r.hasAttribute("data-value-target-attribute")){let s=r.getAttribute("data-value-target-attribute");r.setAttribute(s,t);return}else r.innerHTML=t},n=(e,t,r=[])=>{let s="";return e.hasAttribute(t)&&(s=e.getAttribute(t)),e.dataset[t]&&(s=e.dataset[t]),i(s,r)},y=(e,t=[])=>{let r="";return e.tagName==="INPUT"&&(r=e.value),i(r,t)},d=(e,t)=>{t.forEach(r=>{e.addEventListener(r.type,r.handler)})},l=(e,t=!0)=>{t?(e.setAttribute("disabled",!0),e.classList.add("loading"),e.setAttribute("aria-busy","true")):(e.removeAttribute("disabled"),e.classList.remove("loading"),e.setAttribute("aria-busy","false"))};var g=(e,t)=>Math.round(e*(1+t/100)),E=(e,t)=>Math.ceil(e/t);var S=async(e,t)=>(await fetch(window.Shopify.routes.root+"cart/add.js",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({items:[{id:e,quantity:t}]})})).json();var A="cart-drawer",w=()=>{let e=document.querySelector(A);e&&(e.update?.(),e.show?.())};var v="package-calculator",f=class extends HTMLElement{connectedCallback(){super.connectedCallback?.(),d(this,[{type:"input",handler:this.#e.bind(this)}]),d(this.querySelector("form"),[{type:"submit",handler:this.#t.bind(this)}])}#e(t){t.preventDefault(),this.setAttribute("aria-expanded","true");let r=t.target.valueAsNumber;if(!this.#a(r)){this.#o(1);return}let s=this.#r(r);this.#s(s)}async#t(t){t.preventDefault(),m(this);let r=y(this.querySelector('input[name="square_meters"]'),["parse_int"]),s=n(this,"productId"),a=n(this.querySelector('input[name="quantity"]'),"value",["parse_int"]);if(!r){u(this,"missing-fields","Surface area is required.",{squareMeters:r});return}if(!s){u(this,"generic","Product ID not found.");return}if(!a){u(this,"missing-fields","Quantity is required.",{quantity:a});return}let o=[];document.documentElement.dispatchEvent(new CustomEvent("cart:bundled-sections",{bubbles:!0,detail:{sections:o}})),l(this);let p=await S(s,a),_=await fetch(`?sections=${o.join(",")}`).then(q=>q.json()),h=await(await fetch(`${theme.routes.cart_url}`,{...theme.utils.fetchConfig()})).json();h.sections=_,theme.pubsub.publish(theme.pubsub.PUB_SUB_EVENTS.cartUpdate,{source:"product-form",cart:h}),l(this,!1),w()}#r(t){return g(t,n(this,"cutoffPercentage",["parse_float"]))}#s(t){let r=n(this,"squareMetersPerPackage",["parse_float"]),s=n(this,"productPrice",["parse_float","from_cents"]),a=E(t,r),o=i(a*s,[this.#n()]);c("selected-packs",a),c("entered-surface-area",t),c("totals",o),c("quantity",a)}#a(t){return!(!t||isNaN(t)||t<1)}#o(){this.setAttribute("aria-expanded","false")}#n(){return n(this,"showCurrency",["parse_boolean"])?"to_currency":"to_currency_unsigned"}};customElements.get(v)||customElements.define(v,f);})();
//# sourceMappingURL=data:application/json;base64,
